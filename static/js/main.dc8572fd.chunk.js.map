{"version":3,"sources":["components/Header.tsx","css.tsx","components/pick-book/PickBook.tsx","components/accent/Accent.tsx","BooksObjects.tsx","components/Book/Carousel.tsx","components/Book/Book.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Header","props","Navbar","expand","bg","Brand","Nav","Link","href","React","Component","card_div","css","carousel_panel","border","position","height","width","overflow","minHeight","background","carousel_container","centered_slide","top","left","transform","paddingRight","button_layout","fontSize","PickBook","books","name","author","description","book","Card","style","Body","Title","Text","Button","variant","className","Row","this","map","i","Col","key","renderBookCard","Accent","BOOKS","readingLevel","publisher","text","Carousel","state","currentSlide","nextslideNumber","slides","callback","length","setState","Slide","nextSlide","replace","onClick","icon","faArrowAltCircleRight","Book","location","search","substring","splitLines","split","forEach","line","index","push","Math","floor","showSummary","Table","striped","bordered","hover","finishSlidesCallback","generateSummaryPage","App","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dc8572fd.chunk.js","sourcesContent":["import React from 'react';\nimport { Navbar, Container, Nav } from 'react-bootstrap';\n\nexport default class Header extends React.Component {\n    constructor(public props: Readonly<any>) {\n        super(props);\n\n    }\n\n    public render() {\n        return (\n            <Navbar expand=\"lg\" bg=\"light\">\n                <Navbar.Brand>No Attention!</Navbar.Brand>\n                <Nav.Link href=\"pick-book\">Pick Book</Nav.Link>\n                <Nav.Link href=\"accent\">Accents</Nav.Link>\n            </Navbar>\n        );\n    }\n}","import { css } from 'emotion';\n\nexport const card_div: any = css({\n    'marginLeft': '10%',\n    'marginRight': '10%',\n    'marginTop': '10px'\n});\n\nexport const carousel_panel: any = css({\n    border: '1px solid black',\n    position: 'relative',\n    height: '100%',\n    width: '100%',\n    overflow: 'hidden',\n    minHeight: '92.5vh',\n    background: '#1188BC',\n});\n\nexport const carousel_container: any = css({\n    height: '100%',\n    width: '100%'\n});\n\nexport const centered_slide: any = css({\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    paddingRight: '30px',\n});\n\nexport const button_layout: any = css({\n    position: 'absolute',\n    top: '50%',\n    left: '90%',\n    transform: 'translate(-50%, -50%)',\n    fontSize: '50px',\n});\n","import React from 'react';\nimport { Card, Button, Row, Col } from 'react-bootstrap';\nimport { IBook } from '../../Globals';\nimport { card_div } from '../../css';\n\nexport default class PickBook extends React.Component {\n    books: Array<IBook>;\n\n    constructor(public props: Readonly<any>) {\n        super(props);\n        this.books = [\n            {\n                name: 'Cat In the Hat',\n                author: 'Dr. Seuss',\n                description: 'This book is about a cat in the hat. A very popular and widely loved book.'\n            },\n            {\n                name: 'Fox in Socks',\n                author: 'Dr. Seuss',\n                description: 'This book is about a Fox in socks. A very popular and widely loved book.'\n            },\n            {\n                name: 'How the Grinch Stole Christmas',\n                author: 'Dr. Seuss',\n                description: 'This book is about a grinch. A very popular and widely loved book.'\n            },\n        ]\n    }\n\n    public renderBookCard(book: IBook) {\n        return (\n            <Card style={{ width: '18rem' }}>\n                {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\n                <Card.Body>\n                    <Card.Title>{book.name}</Card.Title>\n                    <Card.Text>\n                        {book.description}\n                    </Card.Text>\n                    <Button variant=\"primary\" href={book.name}>Read this book!</Button>\n                </Card.Body>\n            </Card>\n        );\n    }\n\n    public render() {\n        return (\n            <div className={card_div}>\n                <Row>\n                    {this.books.map((book: IBook, i: number) => {\n                        return (\n                        <Col key={i}>\n                            {this.renderBookCard(book)}\n                        </Col>);\n                    })}\n                </Row>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport default class Accent extends React.Component {\n    constructor(public props: Readonly<any>) {\n        super(props);\n    }\n\n    public render() {\n        return (\n            <p>I am accents</p>\n        );\n    }\n}","import { IBook } from \"./Globals\";\n\n\nexport const BOOKS: { [key: string]: IBook } = {\n    'cat': {\n        name: 'The Cat in the Hat',\n        author: 'Dr. Seuss',\n        readingLevel: 'Easy',\n        description: 'A story about a cat that wears a hat. A funny cat it is!',\n        publisher: 'Random House', //This is not the full text of the book\n        text: `The sun did not shine. \n        It was too wet to play.\n        So we sat in the house\n        All that cold, cold, wet day.\n        \n        I sat there with Sally.\n        We sat there, we two.\n        And I said, \"How I wish\n        We had something to do!\"\n        \n        Too wet to go out\n        And too cold to play ball.\n        So we sat in the house.\n        We did nothing at all.\n        \n        So all we could do was to\n        \n        Sit!\n        Sit!\n        Sit!\n        Sit!\n        \n        And we did not like it.\n        Not one little bit.\n        \n        BUMP!\n        \n        And then\n        something went BUMP!\n        How that bump made us jump!\n        \n        We looked!\n        Then we saw him step in on the mat!\n        We looked!\n        And we saw him!\n        The Cat in the Hat!\n        And he said to us,\n        \"Why do you sit there like that?\"\n        \"I know it is wet\n        And the sun is not sunny.\n        But we can have\n        Lots of good fun that is funny!\"\n        \n        \"I know some good games we could play,\"\n        Said the cat.\n        \"I know some new tricks,\"\n        Said the Cat in the Hat.\n        \"A lot of good tricks.\n        I will show them to you.\n        Your mother\n        Will not mind at all if I do.\"\n        \n        Then Sally and I\n        Did not know what to say.\n        Our mother was out of the house\n        For the day.\n        `\n    }\n}\n","import React from 'react';\nimport { carousel_panel, carousel_container, centered_slide, button_layout } from '../../css';\nimport { faArrowAltCircleRight } from '@fortawesome/free-regular-svg-icons';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n\nexport default class Carousel extends React.Component {\n    state: any;\n\n    constructor(public props: { slides: Array<string>, callback: any }) {\n        super(props);\n        this.state = {\n            currentSlide: 0,\n        }\n    }\n\n    public nextSlide() {\n        const nextslideNumber: number = this.state.currentSlide + 1;\n        const { slides, callback } = this.props;\n        if (nextslideNumber >= slides.length) {\n            callback();\n        } else {\n            this.setState({\n                currentSlide: nextslideNumber,\n            });\n        }\n    }\n\n    public render() {\n        const { slides } = this.props;\n        const { currentSlide } = this.state;\n\n        return (\n            <div className={carousel_container}>\n                <Slide text={slides[currentSlide]} callback={() => this.nextSlide()}></Slide>\n            </div>\n        );\n    }\n}\n\nfunction Slide(props: { text: string, callback: any }) {\n    const { text, callback } = props;\n    const withoutSpace: string = text.replace(/ /g, \"\");\n\n    if (withoutSpace.length === 0) {\n        callback();\n    }\n    \n    return (\n        <div className={carousel_panel}>\n            <div className={centered_slide}>\n                <h1> {text}</h1>\n            </div>\n            <div className={button_layout} >\n                <span onClick={callback}><FontAwesomeIcon icon={faArrowAltCircleRight} /></span>\n            </div>\n        </div >\n    );\n}\n\n\n","import React from 'react';\nimport { BOOKS } from '../../BooksObjects';\nimport Carousel from './Carousel';\nimport { Table } from 'react-bootstrap';\n\nexport default class Book extends React.Component {\n\n    book: any;\n\n    slides: Array<string>;\n\n    state: any;\n\n    constructor(public props: any) {\n        super(props);\n        this.book = BOOKS[props.location.search.substring(1)];\n        const splitLines: Array<string> = this.book!.text.split('\\n');\n        this.slides = [];\n\n        splitLines.forEach((line: string, index: number) => {\n            if (index % 2 === 0) {\n                this.slides.push(line);\n            }\n            else {\n                this.slides[Math.floor(index / 2)] += line;\n            }\n        });\n\n        this.state = {\n            showSummary: false,\n        }\n    }\n\n    public finishSlidesCallback() {\n        this.setState({\n            showSummary: true,\n        });\n    }\n\n    public generateSummaryPage() {\n        return (\n            <Table striped bordered hover>\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>First Name</th>\n                        <th>Last Name</th>\n                        <th>Username</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>1</td>\n                        <td>Mark</td>\n                        <td>Otto</td>\n                        <td>@mdo</td>\n                    </tr>\n                    <tr>\n                        <td>2</td>\n                        <td>Jacob</td>\n                        <td>Thornton</td>\n                        <td>@fat</td>\n                    </tr>\n                    <tr>\n                        <td>3</td>\n                        <td>@twitter</td>\n                    </tr>\n                </tbody>\n            </Table>\n        );\n    }\n\n    public render() {\n        const { showSummary } = this.state;\n        const { book, slides } = this;\n        return (\n            <div>\n                {!showSummary &&\n                    (<Carousel slides={slides} callback={() => this.finishSlidesCallback()} />)\n                }\n                {showSummary &&\n                    this.generateSummaryPage()}\n            </div>\n        );\n    }\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter as Router, Route, Redirect} from 'react-router-dom';\n\nimport Header from './components/Header';\nimport PickBook from './components/pick-book/PickBook';\nimport Accent from './components/accent/Accent';\nimport Book from './components/Book/Book';\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header/>\n      <Route path=\"/accent\" component={Accent}/>\n      <Route path=\"/pick-book\" component={PickBook}/>\n      <Route path=\"/book\" component={Book}/>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}